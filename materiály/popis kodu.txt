Tento kód představuje implementaci klasické hry Pong v Pythonu pomocí knihovny Pygame. Hra zahrnuje hráče, soupeře (ovládaného AI nebo druhým hráčem), míček, překážku a power-upy. Výsledky her se ukládají do databáze SQLite.

**Základní struktura kódu:**

1.  **Import modulů:**
    * `pygame`: Pro grafiku, zvuk a vstup.
    * `sys`: Pro ukončení aplikace.
    * `random`: Pro generování náhodných čísel.
    * `sqlite3`: Pro práci s databází SQLite.
    * `math`: Pro matematické operace (i když se v tomto kódu přímo nevyužívá).
2.  **Inicializace:**
    * `pygame.init()`: Inicializace Pygame.
    * `clock = pygame.time.Clock()`: Vytvoření objektu pro řízení FPS.
3.  **Nastavení obrazovky a objektů:**
    * Definování rozměrů okna a vytvoření herní plochy.
    * Vytvoření objektů `Rect` pro míček, hráče, soupeře a překážku.
4.  **Nastavení proměnných:**
    * Barvy, rychlosti, skóre, písmo, zvuky.
    * Stav hry (např. `ball_moving`, `score_time`).
    * Režim hry (`opponent_mode`).
    * Proměnné pro power-upy.
5.  **Funkce:**
    * `ball_animation()`: Pohyb míčku, kolize, góly, rotace, power-upy.
    * `player_animation()`: Pohyb hráče.
    * `opponent_animation()`: Pohyb soupeře (AI nebo druhý hráč).
    * `prekazka_animace()`: Pohyb překážky.
    * `ball_restart()`: Restart míčku po gólu.
    * `show_title_screen()`: Zobrazení hlavního menu.
    * `show_difficulty_menu()`: Zobrazení menu pro výběr obtížnosti AI.
    * `set_difficulty()`: Nastavení rychlosti AI.
    * `show_databse()`: Zobrazení historie výsledků z databáze.
6.  **Databáze SQLite:**
    * Vytvoření/otevření databáze `game_history.db`.
    * Vytvoření tabulky `history` pro ukládání výsledků.
    * Funkce pro vkládání a načítání dat.
7.  **Hlavní herní smyčka:**
    * Zpracování událostí (vstup z klávesnice, myši).
    * Aktualizace pohybu objektů.
    * Vykreslování herních prvků.
    * Generování a vykreslování power-upů.
    * Řízení FPS.
    * Ukládání výsledků do databáze.
8.  **Power-upy:**
    * Náhodné generování power-upů s různými efekty (zvětšení pálky, zrychlení míče).
    * Vykreslování a aplikace efektů power-upů.
    * Deaktivace power-upů po uplynutí časového limitu.

**Klíčové prvky hry:**

* **Pohyb a kolize:** Kód detailně řeší pohyb míčku, hráčů a překážky, včetně odrážení od stěn a kolizí mezi objekty.
* **AI soupeře:** Soupeř ovládaný AI sleduje míček a snaží se ho odrazit. Obtížnost AI se nastavuje v menu.
* **Power-upy:** Náhodně se generují power-upy, které ovlivňují hru (např. zvětší pálku hráče nebo zrychlí míček).
* **Databáze výsledků:** Výsledky her se ukládají do databáze, což umožňuje sledovat historii her.
* **Menu:** Hra obsahuje hlavní menu pro výběr režimu hry a menu pro nastavení obtížnosti AI.

**Vysvětlení klíčových částí kódu:**

* **`ball_animation()`:** Tato funkce zajišťuje pohyb míčku, odrážení od stěn a kolize s hráči a překážkou. Dále také řeší rotaci míčku a aplikaci power-upů.
* **`player_animation()` a `opponent_animation()`:** Tyto funkce řídí pohyb hráčů. V případě AI soupeře, funkce sleduje pozici míčku a pohybuje soupeřem tak, aby míček odrazil.
* **`prekazka_animace()`:** Tato funkce řídí pohyb překážky, která se pohybuje vertikálně po herní ploše.
* **`ball_restart()`:** Tato funkce se volá po gólu a zobrazuje odpočítávání před restartováním míčku.
* **`show_title_screen()`, `show_difficulty_menu()` a `show_databse()`:** Tyto funkce zobrazují herní menu a historii výsledků.
* **Hlavní herní smyčka:** Tato smyčka řídí celou hru. Zpracovává události, aktualizuje stav hry a vykresluje herní prvky.

Tento kód poskytuje komplexní implementaci hry Pong s různými funkcemi a herními režimy.